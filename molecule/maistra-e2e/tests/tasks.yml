- name: Get Kiali Operator Pod
  k8s_facts:
    api_version: v1
    kind: Pod
    namespace: "{{ operators.kiali.namespace }}"
    label_selectors:
    - app = kiali-operator
  register: kiali_operator_pod

- name: Get Kiali Pod
  k8s_facts:
    api_version: v1
    kind: Pod
    namespace: "{{ item }}"
    label_selectors:
    - app = kiali
  register: kiali_pods
  with_items:
  - "{{ maistra.cr.control_planes }}"

- name: Get Kiali Configmap
  k8s_facts:
    api_version: v1
    kind: ConfigMap
    namespace: "{{ item }}"
    name: kiali
  register: kiali_configmaps
  with_items:
  - "{{ maistra.cr.control_planes }}"
  

- name: Get Service Mesh MemberRolls
  k8s_facts:
    api_version: maistra.io/v1
    kind: ServiceMeshMemberRoll
    namespace: "{{ item }}"
    name: default
  register: smmrs
  with_items:
  - "{{ maistra.cr.control_planes }}"

- name: Get Service Mesh Control Planes
  k8s_facts:
    api_version: maistra.io/v1
    kind: ServiceMeshControlPlane
    namespace: "{{ item }}"
    name: "install-{{ item }}"
  register: smcps
  with_items:
  - "{{ maistra.cr.control_planes }}"

# - name: Get Kiali Roles
#   k8s_facts:
#    api_version: rbac.authorization.k8s.io/v1
#    kind: Role
#    namespace: "{{ item[0] }}"
#    name: "{{ item[1] }}"
#   register: roles
#   with_nested:
#   - "{{ smmrs.results[0].resources[0].spec.members }}"
#   - ['kiali', 'kiali-viewer']


# - name: Get role binding
#   k8s_facts:
#    api_version: rbac.authorization.k8s.io/v1
#    kind: RoleBinding
#    namespace: "{{ item[0] }}"
#    name: "{{ item[1] }}"
#   register: rolebindings
#   with_nested:
#   - "{{ kiali.accessible_namespaces }}"
#   - kiali

- name: Extract Configmaps
  set_fact:
     kiali_configurations: "{{ kiali_configurations + [(item['config.yaml'] | from_yaml)] }}"
  with_items:
  - "{{ cmaps }}"
  vars:
    cmaps: "{{ kiali_configmaps | json_query(query) | list  }}"
    query: "results[*].resources[0].data"
    kiali_configurations: []